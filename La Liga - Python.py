# -*- coding: utf-8 -*-
"""La liga - python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vl6zVCeEmzvcKvNg71eSH2nwjJJlXQiD
"""

##Instalación de requerimientos
!pip3 install -r requirements_colab.txt

##Librerias
import pandas as pd
import snowflake.connector
import openpyxl

##Conexión con la BD
con_HG = snowflake.connector.connect(
                                  user=####,
                                  account=####,
                                  password=#####,
                                  warehouse=#####,
                                  database=#### 
                                  )

from snowflake.connector.pandas_tools import write_pandas

# Funcion de carga a bd
def load_df_to_snowflake(df, conn, table_name,
                         schema='PE_WRITABLE',
                         database='FIVETRAN',
                         mode='append'):
    '''Loads a dataframe to Snowflake.
    Args:
    -------
        df (pd.DataFrame): Dataframe to be uploaded
        conn (SnowflakeConnection): Snowflake Connector
        table_name (str): name of table
        schema (str): name of schema
        database (str): name of database
        mode (str): (append/overwrite) - appends the data to an existing table or overwrites it
    Returns:
    --------
        None
    '''
    # Normalizing data:  Mayusculas
    df.columns = [x.upper() for x in df.columns]
    table_name = table_name.upper()
    schema = schema.upper()
    database = database.upper()
    # Casting dates to objects (o.w. Snowflake won't charge it propperly)
    date_cols = []
    for col in list(df.select_dtypes(include=['datetime'])):
        df[col] = df[col].map(str)
        date_cols.append(col)
    if mode == 'overwrite':
        print(f'INFO: Table {table_name} is beeing created...')
        ######## TABLE CREATION ########
        # Extracting datatypes from dataframe
        dict_types = df.dtypes.to_dict()
        print(dict_types)
        d_query_types = {}
        for key in dict_types:
            if dict_types[key] in ['float']:
                d_query_types[key] = 'float'
            elif dict_types[key] in ['int']:
                d_query_types[key] = 'integer'
            elif dict_types[key] in ['datetime64[ns]']:
                d_query_types[key] = 'varchar'
            elif dict_types[key] in ['object']:
                d_query_types[key] = 'varchar'
            else:
                d_query_types[key] = 'varchar'
#         print(d_query_types)
#         dict_types['MATCH']='object'
        table_types = str(d_query_types).replace("{","").replace("}","").replace("'","")\
                                    .replace(":","").replace(", ",",\n")
        # Creating the table
        print(table_types)
        query_create_table = f'''create or replace table {database}.{schema}.{table_name} (\n{table_types})'''
#         print(query_create_table)
        pd.read_sql(query_create_table, conn)
        print(f'INFO: Table {table_name} has been created.')
    elif mode == 'append':
        print(f'INFO: Adding data to existing table {table_name}...')
    else:
        print(f'INFO: Adding data to existing table {table_name}...')
    ######## DATA LOADING CREATION ########
    # Accessing the Schema
    print('INFO: Accessing database and schema...')
    pd.read_sql(f'use database {database}',conn)
    pd.read_sql(f'use schema {schema}',conn)
    print('INFO: Loading dataframe...')
    write_pandas(conn=conn, df=df, table_name=table_name)
    print(f'INFO: The dataframe has been loaded into the table {database}.{schema}.{table_name}')
    # Denormalizing data
    df.columns = [x.lower() for x in df.columns]
    for col in date_cols:
        df[col] = pd.to_datetime(df[col])

##Excel
excel_file  = '/content/La Liga.xlsx'
table_name = 'RPP_PE_BI_LIGA_TBL'
workbook = openpyxl.load_workbook(excel_file)
sheet_infos = [(i, sheet_name) for i, sheet_name in enumerate(workbook.sheetnames)]

##Alimentar tabla
for sheet_index, sheet_name in sheet_infos:
  mode_table = 'append'
  df = pd.read_excel(excel_file, sheet_name, dtype=str, engine="openpyxl")
  df['SEASON'] = sheet_name
  df.rename(columns = {
                      'Team 1':'Team1'
                      ,'Team 2':'Team2'
                  }, inplace = True)

  if sheet_index == 0 : mode_table = 'overwrite'
  load_df_to_snowflake(df = df,
                      conn = con_HG,
                      database ='FIVETRAN',
                      schema ='PE_WRITABLE',
                      table_name = table_name,
                      mode = mode_table) # overwrite , append